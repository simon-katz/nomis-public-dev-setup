;;; eca-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from eca.el

(autoload 'eca "eca" "\
Start or switch to a eca session.
When ARG is current prefix, ask for workspace roots to use.

(fn &optional ARG)" t)
(autoload 'eca-stop "eca" "\
Stop eca if running." t)
(autoload 'eca-restart "eca" "\
Restart eca, if not running just start." t)
(autoload 'eca-workspaces "eca" "\
Return workspaces used by current session." t)
(autoload 'eca-keep-all-suggested-changes "eca" "\
Keep all of the ECA file change suggestion." t)
(autoload 'eca-discard-all-suggested-changes "eca" "\
Discard all of the ECA file change suggestion." t)
(register-definition-prefixes "eca" '("eca-"))


;;; Generated autoloads from eca-api.el

(register-definition-prefixes "eca-api" '("eca-"))


;;; Generated autoloads from eca-chat.el

(autoload 'eca-chat-clear "eca-chat" "\
Clear the eca chat." t)
(autoload 'eca-chat-select-model "eca-chat" "\
Select which model to use in the chat from what server supports." t)
(autoload 'eca-chat-select-behavior "eca-chat" "\
Select which chat behavior to use from what server supports." t)
(autoload 'eca-chat-reset "eca-chat" "\
Request a chat reset." t)
(autoload 'eca-chat-go-to-prev-user-message "eca-chat" "\
Go to the previous user message from point." t)
(autoload 'eca-chat-go-to-next-user-message "eca-chat" "\
Go to the next user message from point." t)
(autoload 'eca-chat-go-to-prev-expandable-block "eca-chat" "\
Go to the previous expandable block from point." t)
(autoload 'eca-chat-go-to-next-expandable-block "eca-chat" "\
Go to the next expandable block from point." t)
(autoload 'eca-chat-toggle-expandable-block "eca-chat" "\
Toggle current expandable block at point." t)
(autoload 'eca-chat-add-context-at-point "eca-chat" "\
Add file content with range at point to chat as context.
Consider the defun at point unless a region is selected." t)
(autoload 'eca-chat-add-file-context "eca-chat" "\
Add full file to chat as context.
if ARG is current prefix, ask for file, otherwise add current file.

(fn &optional ARG)" t)
(autoload 'eca-chat-talk "eca-chat" "\
Talk to the assistent by recording audio and transcribing it." t)
(register-definition-prefixes "eca-chat" '("eca-chat-"))


;;; Generated autoloads from eca-editor.el

(register-definition-prefixes "eca-editor" '("eca-editor-"))


;;; Generated autoloads from eca-mcp.el

(autoload 'eca-mcp-details "eca-mcp" "\
List MCP servers with their status and options." t)
(register-definition-prefixes "eca-mcp" '("eca-mcp-"))


;;; Generated autoloads from eca-process.el

(autoload 'eca-show-stderr "eca-process" "\
Open the eca process stderr buffer if running." t)
(autoload 'eca-install-server "eca-process" "\
Force download the latest eca server." t)
(autoload 'eca-uninstall-server "eca-process" "\
Remove downloaded eca server if present." t)
(register-definition-prefixes "eca-process" '("eca-"))


;;; Generated autoloads from eca-util.el

(register-definition-prefixes "eca-util" '("eca-"))

;;; End of scraped data

(provide 'eca-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; eca-autoloads.el ends here
